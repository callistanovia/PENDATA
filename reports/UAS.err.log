Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from ucimlrepo import fetch_ucirepo
import pandas as pd

# Ambil dataset Wholesale Customers dari UCI ML Repo
wholesale_customers = fetch_ucirepo(id=292)

# Data (fitur dan target)
X = wholesale_customers.data.features
y = wholesale_customers.data.targets  # Dataset ini tidak punya target eksplisit, biasanya None

# Metadata sederhana yang disesuaikan
metadata = {
    "name": "Wholesale customers",
    "source": wholesale_customers.metadata.get("source", "UCI ML Repo"),
    "instances": X.shape[0],
    "features": X.shape[1],
    "target": "Tidak ada target eksplisit",
    "feature_types": {
        col: ("Numerik" if pd.api.types.is_numeric_dtype(X[col]) else "Kategorikal")
        for col in X.columns
    }
}

# Tampilkan metadata custom
print("Metadata:")
for k, v in metadata.items():
    print(f"{k}: {v}")

# Tampilkan informasi tipe variabel dari dataset
print("\nVariable Information:")
print(wholesale_customers.variables)

# Ambil kolom numerik dari fitur
numeric_cols = X.select_dtypes(include='number').columns

# Fungsi deteksi outlier dengan IQR
def detect_outliers_iqr(series):
    Q1 = series.quantile(0.25)
    Q3 = series.quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return (series < lower_bound) | (series > upper_bound)

# Hitung jumlah outlier per kolom numerik
outlier_per_kolom = {}

print("\nJumlah Outlier per Kolom:")
for col in numeric_cols:
    outliers = detect_outliers_iqr(X[col])
    outlier_count = outliers.sum()
    outlier_per_kolom[col] = outlier_count
    print(f"Kolom {col}: {outlier_count} outlier")

# Total keseluruhan outlier
total_outliers = sum(outlier_per_kolom.values())
print(f"\nTotal outlier di seluruh fitur numerik: {total_outliers}")

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mucimlrepo[39;00m [38;5;28;01mimport[39;00m fetch_ucirepo
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[1;32m      4[0m [38;5;66;03m# Ambil dataset Wholesale Customers dari UCI ML Repo[39;00m

[0;31mModuleNotFoundError[0m: No module named 'ucimlrepo'

